services:
  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: always
    networks:
      - internal-network    
    ports:
      - "${PORT_NGINX}:80" 
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    links:
     - generate-service-deploy 
     - generate-service-ui
     - generate-service-rest
    depends_on:
     - generate-service-rest
     - generate-service-deploy 
     - generate-service-ui
  generate-service-deploy:
    image: lorenzolince/generate-service-deploy
    container_name: generate-service-deploy
    hostname: generate-service-deploy
    user: "app:app" 
    restart: always
    networks:
      - internal-network
    volumes:
    - /app/service
    - ./templates:/app/deploy/templates:rw
    - ./input:/app/deploy/input:rw
    environment:
    - PORT_NGINX=${PORT_NGINX}
    - GRAPHQL_SPQR_HTTP_ENDPOINT=graphql
    - DOMAIN_SERVICE=${LOCAL_IP}
    - PORT_TEST_SOA=${PORT_TEST_SOA}
    - PORT_TEST_REST=${PORT_TEST_REST}
    - PORT_TEST_GRAPHQL=${PORT_TEST_GRAPHQL}
    - PORT_TEST_WS=${PORT_TEST_WS}
    - PORT_TEST_RPC=${PORT_TEST_RPC}
    - API_ENDPOINT=http://generate-service-rest:${PORT_API_REST}
    #- PDF_TEMPLATE_PATH=/app/deploy/templates
    #- PDF_SIGN_PFX=
    #- PDF_SIGN_CERT=
    #- SWAGGER_UI=true
    #- SFTP_KEY=
    #- SFTP_USERNAME=admin
    #- LOCAL_PATH=/app/deploy/templates
    #- FILE_DIRECTORY_INPUT=input/
    #- SMB_HOST=smb.server.test
    #- SMB_PORT=445
    #- SMB_DOMAIN=WORKGROUP
    #- SMB_USER=
    #- SMB_PASSWORD=
    #- SMB_SHARE_NAME_BASE=share 
    #extra_hosts:
    #- sftp.server.test:127.0.0.1
    #- smb.server.test:127.0.0.1
  generate-service-rest:
    image: lorenzolince/generate-service-rest
    container_name: generate-service-rest
    hostname: generate-service-rest
    restart: always
    networks:
      - internal-network
    volumes_from:
      - generate-service-deploy:rw
    volumes:
    - ./data:/app/data
    links:
     - generate-service-deploy 
    environment:
    - API_ENDPOINT_RECEPTION=${URL_RECEPTION}
    - URL_REPOSITORY=${URL_REPOSITORY}
  generate-service-ui:
    image: lorenzolince/generate-service-ui
    container_name: generate-service-ui
    hostname: generate-service-ui
    restart: always
    networks:
      - internal-network
    environment:
    - NODE_ENV=test
    - PORT=3000
    - DOMAIN_SERVICE=${LOCAL_IP} 
    - WEBSOCKET_URL=ws://generate-service-rest:${PORT_NGINX}/backend
    - API_ENDPOINT=http://generate-service-rest:${PORT_API_REST}
    - PORT_API_REST=${PORT_API_REST}
    links:
     - generate-service-rest
    depends_on:
     - generate-service-rest
     
networks:
  internal-network:
    driver: bridge  
    
