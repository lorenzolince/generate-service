services:
  generate-service-deploy:
    image: lorenzolince/generate-service-deploy
    container_name: generate-service-deploy
    hostname: generate-service-deploy
    restart: always
    ports:
     - "${PORT_TEST_SOA}:${PORT_TEST_SOA}"
     - "${PORT_TEST_REST}:${PORT_TEST_REST}"
     - "${PORT_TEST_GRAPHQL}:${PORT_TEST_GRAPHQL}"
    volumes:
    - /app/service
    environment:
    - DOMAIN_SERVICE=${LOCAL_IP}
    - PORT_TEST_SOA=${PORT_TEST_SOA}
    - PORT_TEST_REST=${PORT_TEST_REST}
    - PORT_TEST_GRAPHQL=${PORT_TEST_GRAPHQL}
    - API_ENDPOINT=http://generate-service-rest:${PORT_API_REST}
  generate-service-rest:
    image: lorenzolince/generate-service-rest
    container_name: generate-service-rest
    hostname: generate-service-rest
    restart: always
    ports:
      - "${PORT_API_REST}:${PORT_API_REST}"
    volumes_from:
      - generate-service-deploy:rw
    volumes:
    - ./data:/app/data
    links:
     - generate-service-deploy 
    environment:
    - API_ENDPOINT_RECEPTION=${URL_RECEPTION}
    - URL_REPOSITORY=${URL_REPOSITORY}
  generate-service-ui:
    image: lorenzolince/generate-service-ui
    container_name: generate-service-ui
    hostname: generate-service-ui
    restart: always
    ports:
     - "3000:3000"
    environment:
    - NODE_ENV=test
    - PORT=3000
    - DOMAIN_SERVICE=${LOCAL_IP}
    - API_ENDPOINT=http://generate-service-rest:${PORT_API_REST}
    - PORT_API_REST=${PORT_API_REST}
    links:
     - generate-service-rest
    depends_on:
     - generate-service-rest
    
    
